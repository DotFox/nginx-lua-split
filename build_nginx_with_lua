#!/bin/bash

if [[ $1 == --help ]]; then
  echo "Build nginx with lua-nginx and injected A/B engine"
  echo ""
  echo "Run script with:"
  echo ""
  echo "  PREFIX - where nginx will be installed (full path)."
  echo "  LUAJIT - where luajit-2.1 will be installed (full path)."
  echo "  NGINXV - nginx version (tested 1.7.2 and 1.5.12). Default - 1.5.12."
  exit 0
fi

NGINX_VERSION=1.5.12

if [[ $NGINXV == 1.5.12 || $NGINXV == 1.7.2 || $NGINXV == 1.6.0 ]]; then
  NGINX_VERSION=$NGINXV
fi

ROOT=$PWD

# Cleanup before configure
echo "Cleanup"
rm -rf $ROOT/build
echo "Clean up finished"

echo -n "Need sudo? Type yes or leave blanc. [ENTER]: "
read NEED_SUDO

# Grab nginx, nginx devel kit and nginx lua module
echo "Saving sources"
mkdir $ROOT/build
wget -q -O $ROOT/build/ngx_devel_kit.tar.gz https://github.com/simpl/ngx_devel_kit/archive/v0.2.19.tar.gz
wget -q -O $ROOT/build/nginx.tar.gz http://nginx.org/download/nginx-$NGINX_VERSION.tar.gz
wget -q -O $ROOT/build/ngx_lua.tar.gz https://github.com/openresty/lua-nginx-module/archive/v0.9.10.tar.gz
git clone http://luajit.org/git/luajit-2.0.git $ROOT/build/luajit_src

for f in `find ./build -name \*.tar.gz`; do
  tar -zxf $f -C $ROOT/build
  rm $f
done

# Build pagespeed module
NPS_VERSION=1.8.31.4
wget -q -O $ROOT/build/release-${NPS_VERSION}-beta.zip https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip
cd $ROOT/build
unzip release-${NPS_VERSION}-beta.zip
cd ngx_pagespeed-release-${NPS_VERSION}-beta/
wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz
tar -xzf ${NPS_VERSION}.tar.gz  # extracts to psol/

echo "Complete saving sources"

echo "Build luajit"
cd $ROOT/build/luajit_src
git checkout v2.1
make PREFIX=$LUAJIT
if [[ $NEED_SUDO != '' ]]; then
  sudo make install PREFIX=$LUAJIT
  sudo ln -sf $LUAJIT/bin/luajit-2.1.0-alpha $LUAJIT/bin/luajit
else
  make install PREFIX=$LUAJIT
  ln -sf $LUAJIT/bin/luajit-2.1.0-alpha $LUAJIT/bin/luajit
fi
LUAJIT_BIN=$LUAJIT/bin/luajit
LUAJIT_LIB=$LUAJIT/lib
LUAJIT_INC=$LUAJIT/include/luajit-2.1
cd $ROOT
echo "luajit configured"

# Build all neccesery lua files into package
LD_OPT="-L/usr/local/lib"
mkdir $ROOT/build/libs
for f in `find $ROOT/libs -name \*.lua | grep -v build`; do
  LIB_NAME=`basename $f .lua`.o
  $LUAJIT_BIN -b $f $ROOT/build/libs/$LIB_NAME
  LIB_PATH=$ROOT/build/libs/$LIB_NAME
  LD_OPT="$LD_OPT $LIB_PATH"
done

cd $ROOT/build/nginx-$NGINX_VERSION
NGX_DEVEL_KIT=$ROOT/build/ngx_devel_kit-0.2.19
LUA_NGINX_MODULE=$ROOT/build/lua-nginx-module-0.9.10
NPS_MODULE=$ROOT/build/ngx_pagespeed-release-${NPS_VERSION}-beta
CC_OPT="-I/usr/local/include -Wno-deprecated-declarations"

PASSENGER_ADDON_DIR=`passenger-config --nginx-addon-dir`
if [ ! -d $PASSENGER_ADDON_DIR ]; then
  PASSENGER_ADDON_DIR=`passenger --includedir`/nginx
fi

LUAJIT_LIB=$LUAJIT_LIB LUAJIT_INC=$LUAJIT_INC ./configure \
  --prefix=$PREFIX\
  --add-module=$NGX_DEVEL_KIT\
  --add-module=$LUA_NGINX_MODULE\
  --add-module=$PASSENGER_ADDON_DIR\
  --add-module=$NPS_MODULE\
  --with-cc-opt="$CC_OPT"\
  --with-ld-opt="$LD_OPT"\
  --with-pcre\
  --with-pcre-jit\
  --with-http_ssl_module\
  --with-http_gzip_static_module\
  --with-http_stub_status_module

make -j2
if [[ $NEED_SUDO != '' ]]; then
  sudo make install
else
  make install
fi
