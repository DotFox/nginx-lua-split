init_by_lua '
  split = require("split")
';
#Upstreams for default, a and b servers
upstream default {
  server 127.0.0.1:3000;
}

upstream a {
  server 127.0.0.1:3001;
}

upstream b {
  server 127.0.0.1:3002;
}
#A/B server
server {
  listen 0.0.0.0:80;
  #Server name for matching incomming requests
  #server_name some.server.com;
  #Logs for A/B debug mod
  #error_log logs/split_error.log;
  #access_log logs/access_split.log;

  set $target '';
  #Main entry point for all incomming requests
  access_by_lua '
    ngx.var.target = split.configureUser()
  ';
  #Proxy pass to A, B or default server
  location / {
    proxy_pass http://$target;
    proxy_redirect off;
    proxy_buffering off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Nginx-Proxy true;
  }
  #Internal API for configure Split tests
  location /api/ {
    default_type 'text/html';
    content_by_lua '
      ngx.say(split.renderExperimentForm())
    ';
  }
  #Internal benchmark
  location /api/benchmark/ {
    default_type 'text/plain';
    content_by_lua '
      ngx.say("Start benchmark. Run configureUser 1000 times.")
      ngx.update_time()
      local start = ngx.now()*1000
      for x = 0, 1000, 1 do
        split.configureUser()
      end
      ngx.update_time()
      local finish = ngx.now()*1000
      ngx.say("Start: ", start .. "ms")
      ngx.say("Finish: ", finish .. "ms")
      ngx.say("Result: " .. (finish - start) .. "Î¼s")
    ';
  }
  #Internal endpoint for saving experiment
  location /api/split/ {
    default_type 'text/plain';
    content_by_lua '
      ngx.say(split.saveExperiment())
    ';
  }
  #Internal endpoint for stopping current experiment
  location /api/split/stop/ {
    default-type 'text/plain';
    content_by_lua '
      ngx.say(split.stopExperiment())
    ';
  }
}
