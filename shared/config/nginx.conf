#Use full path for split.lua and redis.lua
#lua_package_path '/home/aviasales/nginx-lua-split/?.lua;/home/aviasales/nginx-lua-split/libs/?.lua;;';
#Load split.lua only in load config phase
init_by_lua '
  split = require("split")
';
#Upstreams for default, a and b servers
upstream default {
  server 127.0.0.1:3000;
}

upstream a {
  server 127.0.0.1:3001;
}

upstream b {
  server 127.0.0.1:3002;
}
#A/B server
server {
  listen 0.0.0.0:80;
  #Server name for matching incomming requests
  server_name beta.jetradar.com beta.jetradar.de beta.jetradar.co.uk beta.jetradar.com.au beta.ca.jetradar.com beta.jetradar.in beta.jetradar.sg beta.ie.jetradar.com beta.jetradar.co.nz beta.jetradar.es beta.fr.jetradar.com beta.it.jetradar.com beta.jetradar.co.th beta.jetradar.pl beta.jetradar.pt beta.jetradar.com.br;
  #Logs for A/B debug mod
  #error_log logs/split_error.log;
  #access_log logs/access_split.log;

  set $target '';
  #Main entry point for all incomming requests
  access_by_lua '
    ngx.var.target = split.configureUser()
  ';
  #Proxy pass to A, B or default server
  location / {
    proxy_pass http://$target;
    proxy_redirect off;
    proxy_buffering off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-Nginx-Proxy true;
  }
  #Internal API for configure Split tests
  location /api/ {
    default_type 'text/html';
    content_by_lua '
      ngx.print(split.renderExperimentForm())
    ';
  }
  #Internal endpoint for saving experiment
  location /api/split/ {
    default_type 'text/plain';
    content_by_lua '
      ngx.say(split.saveExperiment())
    ';
  }
}
